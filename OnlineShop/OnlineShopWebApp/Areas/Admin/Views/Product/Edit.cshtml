@using System.Globalization
@model EditProductViewModel

@{
    var price = Model.Cost.ToString(System.Globalization.CultureInfo.InvariantCulture);
}

<section class="container flex-row">
	<div class="row">

		<div class="col-3 flex-column">
            @await Html.PartialAsync("_NavigationPanel")
		</div>

		<div class="col">
            <div class="row">
                <h2>Изменить товар</h2>
                <hr class="border-brown mb-3" />                
            </div>
            <div class="row">
                <form method="post" id="editProductForm"
                    asp-area="Admin" asp-controller="Product" asp-action="Update"
                      enctype="multipart/form-data">
                    @* Общие свойства товара *@
                    <div class="row">

                        <input type="hidden" name="Id" value="@Model?.Id" />

                        @await Html.PartialAsync("_UploadImagesCarousel", Model?.Images)

                        <div class="row mb-3">
                            <div class="d-flex col-12">
                                <label asp-for="UploadedImages" class="form-label"> Заменить изображение</label>
                                <input asp-for="UploadedImages"
                                       type="file" class="form-control input-field" multiple />
                            </div>
                        </div>

                        <div class="mb-3 col-6">
                            <label asp-for="Name" class="form-label">Наименование</label>
                            <input class="form-control input-field"
                                asp-for="Name">
                            <span asp-validation-for="Name" class="validation-error-message"></span>
                        </div>

                        <div class="mb-3 col-6">
                            <label asp-for="Category" class="form-label">Категория</label>
                            <input class="form-control input-field"
                                asp-for="Category"
                                readonly>
                            <span asp-validation-for="Category" class="validation-error-message"></span>
                        </div>                        
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Cost" class="form-label">Стоимость</label>
                        <input type="number" class="form-control input-field"
                            asp-for="Cost"
                            placeholder="От 10 до 10000000 руб."
                            step="0.01">
                        <span asp-validation-for="Cost" class="validation-error-message"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">Описание</label>
                        <textarea class="form-control"
                                  asp-for="Description" rows="5"></textarea>
                    </div>          
                    
                    <span asp-validation-for="Description" class="validation-error-message"></span>

                    @await Component.InvokeAsync("SpecificationsForm", (Model.Specifications, Model.Category))

                    <div class="mb-3">
                        <span asp-validation-for="Specifications" class="validation-error-message"></span>
                    </div>
                    
                    <div asp-validation-summary="ModelOnly" class="validation-error-message"></div>

                    <button class="btn btn-main mb-3" type="submit">
                        Обновить данные
                    </button>
                </form>
            </div>              
		</div>
	</div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#UploadedImages').on('change', function (event) {
                const files = Array.from(event.target.files);
                const carouselInner = $('#addProductImagesCarousel .carousel-inner');

                carouselInner.empty();

                files.forEach((file, index) => {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        const isActive = index === 0 ? 'active' : '';
                        const carouselItem = `
                            <div class="carousel-item ${isActive}">
                                <img src="${e.target.result}" class="admin-product-add-image" alt="Изображение товара">
                            </div>`;
                        carouselInner.append(carouselItem);
                    };
                    reader.readAsDataURL(file);
                });
            });
        });
    </script>
}
